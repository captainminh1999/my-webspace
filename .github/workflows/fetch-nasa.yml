name: Fetch NASA Data

permissions:
  contents: read

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  update-nasa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Fetch APOD
        env:
          NASA_KEY: ${{ secrets.NASA_KEY }}
        run: |
          curl --silent "https://api.nasa.gov/planetary/apod?api_key=$NASA_KEY&thumbs=true" > space.json


      - name: Fetch Mars Rover Photo
        env:
          NASA_KEY: ${{ secrets.NASA_KEY }}
        run: |
          get_yesterday() {
            date -u -d "yesterday" +%Y-%m-%d
          }
          YESTERDAY=$(get_yesterday)
          curl -s "https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=$YESTERDAY&api_key=$NASA_KEY" \
            | jq '{photos: .photos[0:1] | map({id: .id, img_src: .img_src, camera: .camera.full_name, rover: .rover.name})}' > marsPhoto.json

      - name: Fetch EPIC Earth image
        env:
          NASA_KEY: ${{ secrets.NASA_KEY }}
        run: |
          curl -s "https://api.nasa.gov/EPIC/api/natural?api_key=$NASA_KEY" \
            | jq --arg key "$NASA_KEY" '.[0] | {date: .date, image: .image, caption: .caption, url: ("https://api.nasa.gov/EPIC/archive/natural/" + (.date | split(" ")[0] | gsub("-";"/")) + "/png/" + .image + ".png?api_key=" + $key) }' > epic.json

      - name: Fetch Mars Weather
        env:
          NASA_KEY: ${{ secrets.NASA_KEY }}
        run: |
          curl -s "https://api.nasa.gov/insight_weather/?api_key=$NASA_KEY&feedtype=json&ver=1.0" > weather_raw.json
          jq '{sol_keys: .sol_keys, latest: (.sol_keys[-1] as $s | .[$s] | {sol: $s, AT: .AT.av, HWS: .HWS.av, PRE: .PRE.av})}' weather_raw.json > marsWeather.json


      - name: Push to MongoDB (NASA)
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
        run: |
          node --loader ts-node/esm --experimental-specifier-resolution=node scripts/push-to-mongo.ts \
            --file space.json --singleton space
          node --loader ts-node/esm --experimental-specifier-resolution=node scripts/push-to-mongo.ts \
            --file marsPhoto.json --singleton marsPhoto
          node --loader ts-node/esm --experimental-specifier-resolution=node scripts/push-to-mongo.ts \
            --file epic.json --singleton epic
          node --loader ts-node/esm --experimental-specifier-resolution=node scripts/push-to-mongo.ts \
            --file marsWeather.json --singleton marsWeather
