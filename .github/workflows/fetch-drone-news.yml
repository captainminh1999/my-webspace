name: Fetch Drone News (daily)

permissions:
  contents: read

on:
  schedule:
    # Runs every day at 06:00 UTC (adjust as needed)
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  update-drone-news:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      # 2) Fetch the latest “drone” articles via NewsAPI
      - name: Fetch Drone Articles
        env:
          KEY: ${{ secrets.NEWSAPI_KEY }}
        run: |
          mkdir -p data
          curl -s \
            "https://newsapi.org/v2/everything?qInTitle=drone%20OR%20drones%20OR%20fpv%20OR%20%22dji%20avata%22%20OR%20%22dji%20mavic%22&pageSize=5&sortBy=publishedAt&apiKey=$KEY" \
            > raw_drone.json

      # 3) Trim to only the fields we need (title, url, urlToImage, publishedAt)
      - name: Trim Drone JSON
        run: |
          node <<'NODE'
          const fs = require('fs');
          let src;
          try {
            src = JSON.parse(fs.readFileSync('raw_drone.json', 'utf8'));
          } catch {
            console.error('⚠️  Invalid JSON from NewsAPI');
            process.exit(0);
          }

          if (!Array.isArray(src.articles)) {
            console.error('⚠️  Unexpected NewsAPI response:', JSON.stringify(src).slice(0, 200));
            process.exit(0);
          }

          const banned = [
            'military',
            'attack',
            'atttack',
            'russia',
            'ukraine',
            'strike',
            'strikes',
            'war',
            'dick',
          ];

          const trimmed = src.articles
            .filter(a => !banned.some(b =>
              (a.title || '').toLowerCase().includes(b)
            ))
            .map((a) => ({
              title: a.title || '',
              url: a.url || '',
              image: a.urlToImage || '',
              publishedAt: a.publishedAt || '',
            }));

          fs.writeFileSync('data/droneNews.json', JSON.stringify(trimmed, null, 2));
          NODE


      - name: Update MongoDB with new data
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
        run: npm run migrate
