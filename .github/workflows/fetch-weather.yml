name: Fetch Weather (hourly)

permissions:
  contents: read

on:
  schedule:
    # Runs at 10 minutes past every hour (UTC)
    - cron: '10 * * * *'
  workflow_dispatch:

jobs:
  update-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Fetch current weather
        env:
          KEY: ${{ secrets.WEATHER_KEY }}
        run: |
          mkdir -p data
          curl -s \
            "https://api.openweathermap.org/data/3.0/onecall?lat=-33.87&lon=151.21&units=metric&exclude=minutely,alerts&appid=$KEY" \
            > raw_weather.json

      - name: Trim hourly & daily data
        run: |
          node <<'NODE'
          const fs = require('fs');
          const raw = fs.readFileSync('raw_weather.json', 'utf8');
          let src;
          try {
            src = JSON.parse(raw);
          } catch {
            src = null;
          }

          if (!src || !src.current || !Array.isArray(src.hourly) || !Array.isArray(src.daily)) {
            process.exit(0); // skip if payload invalid
          }

          const out = {
            updated: Math.floor(Date.now() / 1000),
            current: {
              temp: src.current.temp,
              icon: src.current.weather[0].icon,
            },
            hourly: src.hourly.slice(0, 12).map(h => ({
              dt: h.dt,
              temp: h.temp,
              icon: h.weather[0].icon,
            })),
            daily: src.daily.slice(0, 7).map(d => ({
              dt: d.dt,
              min: d.temp.min,
              max: d.temp.max,
              icon: d.weather[0].icon,
            })),
          };

          fs.writeFileSync('src/data/weather.json', JSON.stringify(out, null, 2));
          NODE


      - name: Update MongoDB with new data
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DB: ${{ secrets.MONGODB_DB }}
        run: npm run migrate
